const fetch = require('node-fetch');

async function checkBackendStatus() {
  console.log('üîç VERIFICANDO ESTADO DEL BACKEND');
  console.log('=================================');
  
  try {
    // Verificar si el backend est√° ejecut√°ndose
    console.log('\nüîç Verificando si el backend est√° ejecut√°ndose...');
    const response = await fetch('http://localhost:3001/api/health', {
      method: 'GET',
      timeout: 5000
    });
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ Backend est√° ejecut√°ndose');
      console.log('üìÑ Respuesta:', data);
    } else {
      console.log('‚ùå Backend no responde correctamente');
      return;
    }
    
    // Verificar endpoints espec√≠ficos
    console.log('\nüîç Verificando endpoints espec√≠ficos...');
    
    const endpoints = [
      { url: 'http://localhost:3001/api/auth/login', method: 'POST', body: {} },
      { url: 'http://localhost:3001/api/auth/profile', method: 'GET', body: null },
      { url: 'http://localhost:3001/api/auth/verify', method: 'GET', body: null }
    ];
    
    for (const endpoint of endpoints) {
      try {
        console.log(`\nüîç Probando: ${endpoint.method} ${endpoint.url}`);
        
        const options = {
          method: endpoint.method,
          timeout: 5000
        };
        
        if (endpoint.body !== null) {
          options.headers = { 'Content-Type': 'application/json' };
          options.body = JSON.stringify(endpoint.body);
        }
        
        const response = await fetch(endpoint.url, options);
        console.log(`üìä Status: ${response.status} ${response.statusText}`);
        
        if (response.status === 404) {
          console.log('‚ùå Endpoint no encontrado');
        } else if (response.status === 401) {
          console.log('‚úÖ Endpoint existe (requiere autenticaci√≥n)');
        } else if (response.status === 400) {
          console.log('‚úÖ Endpoint existe (error de validaci√≥n)');
        } else {
          console.log(`‚ö†Ô∏è Respuesta inesperada: ${response.status}`);
        }
      } catch (error) {
        console.log(`‚ùå Error: ${error.message}`);
      }
    }
    
    // Verificar si hay alg√∫n problema con el registro de rutas
    console.log('\nüîç Verificando registro de rutas...');
    
    try {
      const response = await fetch('http://localhost:3001/api/auth/verify', {
        method: 'GET',
        timeout: 5000
      });
      
      if (response.status === 401) {
        console.log('‚úÖ Ruta /api/auth/verify existe (requiere token)');
      } else if (response.status === 404) {
        console.log('‚ùå Ruta /api/auth/verify no encontrada');
      } else {
        console.log(`‚ö†Ô∏è Respuesta inesperada: ${response.status}`);
      }
    } catch (error) {
      console.log(`‚ùå Error verificando rutas: ${error.message}`);
    }
    
  } catch (error) {
    console.log('‚ùå Error general:', error.message);
  }
  
  console.log('\nüéØ VERIFICACI√ìN COMPLETADA');
  console.log('==========================');
}

checkBackendStatus().catch(console.error);

require('dotenv').config();
const { v2 as cloudinary } = require('cloudinary');

console.log('üîç Verificando configuraci√≥n de Cloudinary...\n');

// Verificar variables de entorno
const cloudName = process.env.CLOUDINARY_CLOUD_NAME;
const apiKey = process.env.CLOUDINARY_API_KEY;
const apiSecret = process.env.CLOUDINARY_API_SECRET;

console.log('üìã Variables de entorno:');
console.log(`   Cloud Name: ${cloudName ? '‚úÖ Configurado' : '‚ùå Faltante'}`);
console.log(`   API Key: ${apiKey ? '‚úÖ Configurado' : '‚ùå Faltante'}`);
console.log(`   API Secret: ${apiSecret ? '‚úÖ Configurado' : '‚ùå Faltante'}`);

if (!cloudName || !apiKey || !apiSecret) {
  console.log('\n‚ùå Error: Faltan variables de entorno de Cloudinary');
  console.log('   Aseg√∫rate de tener un archivo .env en el directorio backend con:');
  console.log('   CLOUDINARY_CLOUD_NAME=tu_cloud_name');
  console.log('   CLOUDINARY_API_KEY=tu_api_key');
  console.log('   CLOUDINARY_API_SECRET=tu_api_secret');
  process.exit(1);
}

// Configurar Cloudinary
cloudinary.config({
  cloud_name: cloudName,
  api_key: apiKey,
  api_secret: apiSecret
});

console.log('\nüîß Configurando Cloudinary...');

// Probar conexi√≥n con Cloudinary
cloudinary.api.ping()
  .then(result => {
    console.log('‚úÖ Conexi√≥n exitosa con Cloudinary');
    console.log(`   Status: ${result.status}`);
    console.log('\nüéâ Configuraci√≥n de Cloudinary completada exitosamente!');
    console.log('   El sistema est√° listo para procesar im√°genes.');
  })
  .catch(error => {
    console.log('‚ùå Error conectando con Cloudinary:');
    console.log(`   ${error.message}`);
    console.log('\nüîß Verifica:');
    console.log('   1. Que las credenciales sean correctas');
    console.log('   2. Que tu cuenta de Cloudinary est√© activa');
    console.log('   3. Que tengas conexi√≥n a internet');
  });

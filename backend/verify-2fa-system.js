const mongoose = require('mongoose');
const { authenticator } = require('otplib');
require('dotenv').config();

// Conectar a MongoDB
async function connectDB() {
  try {
    const uri = process.env.MONGODB_URI || 'mongodb+srv://username:password@cluster.mongodb.net/?retryWrites=true&w=majority&appName=Cluster';
    await mongoose.connect(uri, {
      serverSelectionTimeoutMS: 10000,
      socketTimeoutMS: 45000,
    });
    console.log('‚úÖ Conectado a MongoDB');
  } catch (error) {
    console.error('‚ùå Error conectando a MongoDB:', error);
    process.exit(1);
  }
}

// Verificaci√≥n final del sistema
async function verifySystem() {
  try {
    console.log('üîç VERIFICACI√ìN FINAL DEL SISTEMA 2FA');
    console.log('=====================================\n');
    
    const User = require('./dist/models/User').default;
    const user = await User.findOne({ email: 'admin@example.com' }).select('+twoFactorSecret +backupCodes');
    
    if (!user || !user.twoFactorEnabled) {
      console.log('‚ùå Sistema 2FA no configurado');
      return false;
    }
    
    // Generar y verificar c√≥digo
    const code = authenticator.generate(user.twoFactorSecret);
    const isValid = user.verifyTwoFactorCode(code);
    
    console.log('‚úÖ Usuario admin encontrado');
    console.log('‚úÖ 2FA habilitado');
    console.log('‚úÖ Secreto configurado');
    console.log('‚úÖ C√≥digo generado:', code);
    console.log('‚úÖ Verificaci√≥n exitosa:', isValid);
    console.log('‚úÖ C√≥digos de respaldo:', user.backupCodes?.length || 0);
    
    return isValid;
  } catch (error) {
    console.error('‚ùå Error en verificaci√≥n:', error);
    return false;
  }
}

// Funci√≥n principal
async function main() {
  await connectDB();
  const isWorking = await verifySystem();
  
  if (isWorking) {
    console.log('\nüéâ SISTEMA 2FA COMPLETAMENTE FUNCIONAL');
    console.log('‚úÖ Listo para presentaci√≥n a socios capitalistas');
  } else {
    console.log('\n‚ùå Sistema requiere configuraci√≥n adicional');
  }
  
  process.exit(0);
}

main().catch(console.error);
